openapi: 3.0.0
info:
  title: Lingo Craft API
  version: 0.0.1
servers:
  - url: /lingo-craft/v1
    description: Lingo Craft APIs
paths:
  /user/{id}:
    get:
      summary: Get a user by its id.
      operationId: getUserById
      description: This endpoint will get an existing user from our system.
      parameters:
        - name: id
          in: path
          required: true
          description: id of existing user
          schema:
            type: string
      responses:
        '200':
          description: Got User by id successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'

        '400':
          description: Bad request, check request payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a user by its id.
      operationId: deleteUserById
      description: This endpoint will delete an existing user from our system.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of existing user
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResponse'
        '400':
          description: Bad request, check request payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /user/email/{email}/password/{password}:
    get:
      summary: Get a user by email and password.
      operationId: getUserByEmailPassword
      description: This endpoint will get an existing user from our system.
      parameters:
        - name: email
          in: path
          required: true
          description: email of existing user
          schema:
            type: string
        - name: password
          in: path
          required: true
          description: password of existing user
          schema:
            type: string
      responses:
        '200':
          description: Got User by email and password successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'

        '400':
          description: Bad request, check request payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /user:
    post:
      summary: Create a new user.
      operationId: createUser
      description: This endpoint will generate a new user in our system.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '200':
          description: New User is created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'

        '400':
          description: Bad request, check request payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /analysis:
    post:
      summary: Api to perform text analysis.
      operationId: languageAnalysis
      description: Api to perform an analysis against a text provided by user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageAnalysisRequest'
      responses:
        '200':
          description: Language is analysed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageAnalysisResponse'

        '400':
          description: Bad request, check request payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /analysis/upload:
    post:
      summary: Api to analysis text from file.
      operationId: languageAnalysisFromFile
      description: Upload file with content to detect language.
      parameters:
        - in: query
          name: userId
          required: true
          description: User id need to pass in url query.
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Language is detected successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageAnalysisResponse'

        '400':
          description: Bad request, check request payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sentiment:
    get:
      summary: Api to get content sentiment stats
      operationId: getSentimentStats
      description: Api to get content sentiments against provided workflowId.
      parameters:
        - in: query
          name: workflowId
          description: Workflow id which is created and returned during content analysis.
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: userId
          description: This will be our registered user id who is using our api.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Content sentiment stats provided successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSentimentResponse'

        '400':
          description: Bad request, check request payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


components:
  schemas:
    LanguageAnalysisRequest:
      type: object
      properties:
        userId:
          type: string
          description: Id of user requesting language analysis.
        text:
          type: string
          description: A text provided by user to detect its language.
      required:
        - text
        - userId

    LanguageAnalysisResponse:
      allOf:
        - $ref: '#/components/schemas/LanguageAnalysisRequest'
        - type: object
          properties:
            languageAnalysisWorkflowId:
              type: string
              description: A temporal workflow id which is used to perform text analysis.
            languageCode:
              type: string
              description: Language ISO-639 code.
            language:
              type: string
              description: Language name.
            confidence:
              type: string
              description: Language detection confidence.
              enum:
                - HIGH
                - MEDIUM
                - LOW
                - NONE
            rawScore:
              type: number
              description: Language detection raw score.
            metadata:
              type: object
              additionalProperties:
                type: string
          required:
            - languageCode
            - confidence
            - rawScore

    CreateUserRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of new user we are aiming to create.
        password:
          type: string
          description: Password of new user we are aiming to create.
        email:
          type: string
          description: Email of new user we are aiming to create.
        phone:
          type: string
          description: Phone of new user we are aiming to create.
        age:
          type: integer
          description: Age of new user we are aiming to create.
        gender:
          type: string
          description: Gender of new user we are aiming to create.
          enum:
            - MALE
            - FEMALE
        roleId:
          type: integer
          description: RoleId of new user we are aiming to create.
      required:
        - name
        - password
        - email
        - phone
        - age
        - gender
        - roleId

    CreateUserResponse:
      allOf:
        - $ref: '#/components/schemas/CreateUserRequest'
        - type: object
          properties:
            id:
             type: string
             description: Id of newly created user.
          required:
            - id

    GetUserResponse:
      allOf:
        - $ref: '#/components/schemas/CreateUserResponse'

    DeleteUserResponse:
      allOf:
        - $ref: '#/components/schemas/GetUserResponse'

    ErrorResponse:
      type: object
      properties:
        errorMessage:
          type: string
          description: Error message details.

    ContentSentimentResponse:
      type: object
      properties:
        workflowId:
          type: string
          format: uuid
          description: Current workflow id. This id is a UUID.
        userId:
          type: string
          format: uuid
          description: Registered user id. This id is a UUID.
        accumulatedContentSentimentScore:
          type: integer
          description: | 
            An accumulated sentiment score calculated against provided contents.
            The value of sentiment score will be in between 0 - 4,
            0 - Zero means provided content means very negative, as content have negative sentiment.
            1 - One means provided content is negative, as content have negative sentiment.
            2 - Two means provided content is neutral, as content have neutral sentiment.
            3 - Three means provided content is positive, as content have positive sentiment.
            4 - Four means provided content is very positive, as content have very positive sentiment.
        positiveSentimentPercentage:
          type: string
          description: | 
            This is the percentage of a content positive sentiment. For example if value 65% its 
            means content is 65 percent positive.
        accumulatedContentSentiment:
          type: string
          enum:
            - VERY_POSITIVE
            - POSITIVE
            - NEUTRAL
            - NEGATIVE
            - VERY_NEGATIVE
          description:  An accumulated sentiment value in string representation.
        contentSentimentAnalysisModels:
          type: array
          items:
            $ref: '#/components/schemas/ContentSentimentAnalysisModel'
      required:
        - userId
        - accumulatedContentSentiment
        - positiveSentimentPercentage
        - accumulatedContentSentimentScore
        - contentSentimentAnalysisModels
        - workflowId

    ContentSentimentAnalysisModel:
      properties:
        text:
          type: string
          description: Content which is given for sentiment analysis.
        languageCode:
          type: string
          description: Detected content language code.
        sentimentScore:
          type: integer
          description: | 
            Sentiment score for provided content. The value of sentiment score will be in between 0 - 4,
            0 - Zero means provided content means very negative, as content have negative sentiment.
            1 - One means provided content is negative, as content have negative sentiment.
            2 - Two means provided content is neutral, as content have neutral sentiment.
            3 - Three means provided content is positive, as content have positive sentiment.
            4 - Four means provided content is very positive, as content have very positive sentiment.
        sentimentName:
          type: string
          description:  An sentiment value in string representation.
      required:
        - languageCode
        - sentimentName
        - text
        - sentimentScore
